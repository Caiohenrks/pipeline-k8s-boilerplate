pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: docker
                image: docker:latest
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
            """
        }
    }

    environment {
        DOCKER_IMAGE = "caiohenrks/python-crud"
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        DEPLOYMENT_FILE = "kubernetes/deployment.yaml"
        GIT_REPO = "https://github.com/Caiohenrks/pipeline-k8s-boilerplate.git"
        GIT_BRANCH = "master"
        KUBERNETES_DEPLOYMENT = "python-crud-deployment"
        KUBERNETES_NAMESPACE = "default"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                container('docker') {
                    script {
                        docker.build("${DOCKER_IMAGE}:${DOCKER_TAG}")
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                container('docker') {
                    script {
                        docker.withRegistry('', 'dockerhub-credentials') {
                            docker.image("${DOCKER_IMAGE}:${DOCKER_TAG}").push()
                        }
                    }
                }
            }
        }

        stage('Update Deployment YAML') {
            steps {
                container('docker') {
                    script {
                        sh """
                        sed -i 's|image: ${DOCKER_IMAGE}:.*|image: ${DOCKER_IMAGE}:${DOCKER_TAG}|' ${DEPLOYMENT_FILE}
                        """
                    }
                }
            }
        }

        stage('Commit and Push Changes') {
            steps {
                container('docker') {
                    script {
                        sh """
                        git config --global --add safe.directory /home/jenkins/agent/workspace/PIPELINE-NGINX
                        git config --global user.email "jenkins@example.com"
                        git config --global user.name "Jenkins"
                        git checkout ${GIT_BRANCH}
                        git add ${DEPLOYMENT_FILE}
                        git commit -m "Update deployment image to ${DOCKER_IMAGE}:${DOCKER_TAG}"
                        git push origin ${GIT_BRANCH}
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
