pipeline {
    agent {
        kubernetes {
            yaml """
            apiVersion: v1
            kind: Pod
            spec:
              containers:
              - name: sonar-scanner
                image: sonarsource/sonar-scanner-cli
                command:
                - cat
                tty: true
              - name: docker-build
                image: docker:latest
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              - name: trivy
                image: aquasec/trivy:latest
                command:
                - cat
                tty: true
                volumeMounts:
                - name: docker-sock
                  mountPath: /var/run/docker.sock
              - name: newman
                image: postman/newman_alpine33
                command:
                - cat
                tty: true
                volumeMounts:
                - name: workspace
                  mountPath: /workspace
              - name: git
                image: alpine/git:latest
                command:
                - cat
                tty: true
                volumeMounts:
                - name: workspace
                  mountPath: /workspace
              volumes:
              - name: docker-sock
                hostPath:
                  path: /var/run/docker.sock
              - name: workspace
                emptyDir: {}
            """
        }
    }
    environment {
        DOCKER_IMAGE = "caiohenrks/python-crud"
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        DEPLOYMENT_FILE = "kubernetes/deployment.yaml"
        GIT_REPO = "https://github.com/Caiohenrks/pipeline-k8s-boilerplate.git"
        GIT_BRANCH = "master"
        KUBERNETES_DEPLOYMENT = "python-crud-deployment"
        KUBERNETES_NAMESPACE = "default"
        ARTIFACTS_DIR = "artifacts"
    }
    stages {
        // ... Outras etapas aqui

        stage('Security Image Scan') {
            steps {
                container('trivy') {
                    script {
                        sh """
                        trivy image \
                            --exit-code 0 \
                            --severity HIGH,CRITICAL \
                            --format html \
                            --output /workspace/trivy-report.html \
                            ${DOCKER_IMAGE}:${DOCKER_TAG}
                        """
                    }
                }
            }
        }
        
        stage('Smoke Test') {
            steps {
                container('newman') {
                    script {
                        sh """
                        newman run /workspace/postman/${JOB_NAME.toLowerCase()}.json \
                            -r htmlextra \
                            --reporter-htmlextra-export /workspace/newman-report.html
                        """
                    }
                }
            }
        }
        
        stage('Collect and Archive Evidence') {
            steps {
                container('docker-build') {
                    script {
                        sh """
                        mkdir -p ${ARTIFACTS_DIR}
                        mv /workspace/trivy-report.html ${ARTIFACTS_DIR}/
                        mv /workspace/newman-report.html ${ARTIFACTS_DIR}/
                        """
                        archiveArtifacts artifacts: "${ARTIFACTS_DIR}/*", fingerprint: true
                    }
                }
            }
        }
    }
}
